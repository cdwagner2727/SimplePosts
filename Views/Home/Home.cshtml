@model SimplePosts.ViewModel.PostVM

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
    <head>
        <meta name="viewport" content="width=device-width" />
        <title>Posts for @Session["Username"]</title>
<<<<<<< HEAD

=======
<<<<<<< HEAD

        <script src="@Url.Content("~/Scripts/jquery-2.2.3.js")"></script>
        <script src="@Url.Content("~/Scripts/jquery.validate.js")"></script>
        <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")"></script>
        <script src="@Url.Content("~/Scripts/knockout-3.4.0.js")"></script>
        <script src="@Url.Content("~/Scripts/knockout.mapping-latest.js")"></script>

        <style>
            tbody {margin-bottom: 2em;}
        </style>
    </head>
    <body>
        <div>
            @if (@Model.UserObj.Username == "Guest")
            {
                <p>Welcome, Guest.  Please feel free to <a href="/Login/Login/">Login</a> or <a href="/Login/Register">Register</a></p>
                
=======
<<<<<<< HEAD

>>>>>>> origin/master
        <script src="@Url.Content("~/Scripts/jquery-2.2.3.js")"></script>
        <script src="@Url.Content("~/Scripts/jquery.validate.js")"></script>
        <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")"></script>
        <script src="@Url.Content("~/Scripts/knockout-3.4.0.js")"></script>
        <script src="@Url.Content("~/Scripts/knockout.mapping-latest.js")"></script>
<<<<<<< HEAD
        <script src="@Url.Content("~/Scripts/jquery.signalR-2.2.0.js")"></script>
=======

        <style>
            tbody {margin-bottom: 2em;}
        </style>
    </head>
    <body>
        <div>
            @if (@Model.UserObj.Username == "Guest")
            {
                <p>Welcome, Guest.  Please feel free to <a href="/Login/Login/">Login</a> or <a href="/Login/Register">Register</a></p>
                
=======
>>>>>>> origin/master

        <script src="@Url.Content("~/Scripts/jquery-2.2.3.js")"></script>
        <script src="@Url.Content("~/Scripts/jquery.validate.js")"></script>
        <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")"></script>
        <script src="@Url.Content("~/Scripts/knockout-3.4.0.js")"></script>
        <script src="@Url.Content("~/Scripts/knockout.mapping-latest.js")"></script>
    </head>
    <body>
        <div>
<<<<<<< HEAD
            @if (@Model.UserObj.Username == "Guest")
            {
                <p>Welcome, Guest.  Please feel free to <a href="/Login/Login/">Login</a> or <a href="/Login/Register">Register</a></p>
                
=======
            @if (Session["User"] == null)
            {

>>>>>>> origin/master
>>>>>>> origin/master
>>>>>>> origin/master
            }
            else
            {
                <p>Welcome, @Model.UserObj.Username.  Not @Model.UserObj.Username? <a href="/Login/Logout/">Logout</a></p>
<<<<<<< HEAD
=======
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> origin/master
>>>>>>> origin/master
                using (Html.BeginForm("AddPost", "Home", FormMethod.Post, new { onsubmit = "return addPost(event);" }))
                {
                    <i>Title:   </i>@Html.TextBoxFor(p => p.PostObj.Title, new { @id = "titleInput" })<br /><span>@Html.ValidationMessageFor(p => p.PostObj.Title)</span><br />
                    <i>Content:   </i>@Html.TextAreaFor(p => p.PostObj.Content, new { @id = "contentInput" })<br /><span>@Html.ValidationMessageFor(p => p.PostObj.Content)</span><br />
                    <i>Make post public?</i>@Html.CheckBoxFor(p => p.PostObj.Public, new { @id = "publicInput" })
                    <input id="submit" type="submit" value="Save" />
                }
            }
            
            
<<<<<<< HEAD
=======
<<<<<<< HEAD
        </div>
        
        <div>
            @if (@Model.UserObj.Username == "Guest"){
                <div><h4>Public posts:</h4></div>
            }
                <div data-bind ="foreach: posts">
                    <table style="margin-bottom: 2em">
                        <tr>
                            <td>Title:</td>
                            <td>
                                <span data-bind="text: Title, visible: !editable()"></span>
                                <span data-bind="visible: editable"><input type="text" data-bind="value: Title, attr: { 'id': $index() + 'titleEdit' }" /><a href="#" data-bind="click: toggleEditable">[X]</a></span>
                            </td>
                        </tr>
                        <tr>
                            <td>Author:</td>
                            <td>
                                @Model.UserObj.Username
                            </td>
                        </tr>
                        <tr>
                            <td>Content:</td>
                            <td>
                                <span data-bind="text: Content, visible: !editable()"></span>
                                <span data-bind="visible: editable"><input type="text" data-bind="value: Content, attr: { 'id': $index() + 'contentEdit' }" /></span>
                            </td>
                        </tr>
                        @if (@Model.UserObj.Username != "Guest"){
                            <tr>
                                <td>
                                    <span data-bind="visible: !editable()">
                                        <input type="button" data-bind="click: toggleEditable, visible: !editable()" value="Edit" />
                                    </span>
                                    <span data-bind="visible: editable">
                                        <input type="button" data-bind="click: updatePost" value="Save" />
                                        <span>Is public: <input type="checkbox" data-bind="checked: Public, attr: { 'id': $index() + 'publicEdit' }" /></span>
                                    </span>
                                </td>
                                <td><input type="button" data-bind="click: removePost" value="Remove" /></td>
                            </tr>
                        }
                </table>
            </div>
=======
        </div>
        
        <div>
            @if (@Model.UserObj.Username == "Guest"){
                <div><h4>Public posts:</h4></div>
            }
                <div data-bind ="foreach: posts">
                    <table style="margin-bottom: 2em">
                        <tr>
                            <td>Title:</td>
                            <td>
                                <span data-bind="text: Title, visible: !editable()"></span>
                                <span data-bind="visible: editable"><input type="text" data-bind="value: Title, attr: { 'id': $index() + 'titleEdit' }" /><a href="#" data-bind="click: toggleEditable">[X]</a></span>
                            </td>
                        </tr>
                        <tr>
                            <td>Author:</td>
                            <td>
                                @Model.UserObj.Username
                            </td>
                        </tr>
                        <tr>
                            <td>Content:</td>
                            <td>
                                <span data-bind="text: Content, visible: !editable()"></span>
                                <span data-bind="visible: editable"><input type="text" data-bind="value: Content, attr: { 'id': $index() + 'contentEdit' }" /></span>
                            </td>
                        </tr>
                        @if (@Model.UserObj.Username != "Guest"){
                            <tr>
                                <td>
                                    <span data-bind="visible: !editable()">
                                        <input type="button" data-bind="click: toggleEditable, visible: !editable()" value="Edit" />
                                    </span>
                                    <span data-bind="visible: editable">
                                        <input type="button" data-bind="click: updatePost" value="Save" />
                                        <span>Is public: <input type="checkbox" data-bind="checked: Public, attr: { 'id': $index() + 'publicEdit' }" /></span>
                                    </span>
                                </td>
                                <td><input type="button" data-bind="click: removePost" value="Remove" /></td>
                            </tr>
                        }
                </table>
            </div>
=======
                using(Html.BeginForm("AddPost", "Home", FormMethod.Post, new { onsubmit = "return addPost(event);" }))
                {
                    <i>Title:   </i>@Html.TextBoxFor(p => p.PostObj.Title, new { @id = "titleInput" })<br /><span>@Html.ValidationMessageFor(p => p.PostObj.Title)</span><br />
                    <i>Content:   </i>@Html.TextAreaFor(p => p.PostObj.Content, new { @id = "contentInput" })<br /><span>@Html.ValidationMessageFor(p => p.PostObj.Content)</span><br />
                    <input id="submit" type="submit" value="Save" />
                }
            }
>>>>>>> origin/master
        </div>
        @if (@Model.UserObj.Username != "Guest"){
            <div id="publicArea" style="float: right">
                <h4>Public Posts:</h4>
                <div id="publicPosts" data-bind="foreach: publicPosts">
                    <table style="margin-bottom: 2em">
                        <tr>
                            <td>Title:</td>
                            <td>
                                <span data-bind="text: Title"></span>
                            </td>
                        </tr>
                        <tr>
                            <td>Author:</td>
                            <td>
                                <span data-bind="text: Author"></span>
                            </td>
                        </tr>
                        <tr>
                            <td>Content:</td>
                            <td>
                                <span data-bind="text: Content"></span>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
        }
        <div>
<<<<<<< HEAD
            @if (@Model.UserObj.Username == "Guest"){
                <div><h4>Public posts:</h4></div>
                <div id="publicPosts"></div>
            }
                <div data-bind ="foreach: posts">
                    <table style="margin-bottom: 2em">
                        <tr>
                            <td>Title:</td>
                            <td>
                                <span data-bind="text: Title, visible: !editable()"></span>
                                <span data-bind="visible: editable"><input type="text" data-bind="value: Title, attr: { 'id': $index() + 'titleEdit' }" /><a href="#" data-bind="click: toggleEditable">[X]</a></span>
                            </td>
                        </tr>
                        <tr>
                            <td>Author:</td>
                            <td>
                                <span data-bind="text: Author"></span>
                            </td>
                        </tr>
                        <tr>
                            <td>Content:</td>
                            <td>
                                <span data-bind="text: Content, visible: !editable()"></span>
                                <span data-bind="visible: editable"><input type="text" data-bind="value: Content, attr: { 'id': $index() + 'contentEdit' }" /></span>
                            </td>
                        </tr>
                        @if (@Model.UserObj.Username != "Guest"){
                            <tr>
                                <td>
                                    <span data-bind="visible: !editable()">
                                        <input type="button" data-bind="click: toggleEditable, visible: !editable()" value="Edit" />
                                    </span>
                                    <span data-bind="visible: editable">
                                        <input type="button" data-bind="click: updatePost" value="Save" />
                                        <span>Is public: <input type="checkbox" data-bind="checked: Public, attr: { 'id': $index() + 'publicEdit' }" /></span>
                                    </span>
                                </td>
                                <td><input type="button" data-bind="click: removePost" value="Remove" /></td>
                            </tr>
                        }
                </table>
            </div>
=======
            <table data-bind="foreach: posts">

                <tbody data-bind="attr: { id: $index }">
                    <tr>
                        <td>Title:</td>
                        <td>
                            <span data-bind="text: Title, visible: !editable()"></span>
                            <span data-bind="visible: editable"><input type="text" data-bind="value: Title, attr: { 'id': $index() + 'titleEdit' }" /><a href="#" data-bind="click: toggleEditable">[X]</a></span>
                        </td>
                    </tr>
                    <tr>
                        <td>Author:</td>
                        <td>
                            @Model.UserObj.Username
                        </td>
                    </tr>
                    <tr>
                        <td>Content:</td>
                        <td>
                            <span data-bind="text: Content, visible: !editable()"></span>
                            <span data-bind="visible: editable"><input type="text" data-bind="value: Content, attr: { 'id': $index() + 'contentEdit' }" /></span>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <span data-bind="visible: !editable()">
                                <input type="button" data-bind="click: toggleEditable, visible: !editable()" value="Edit" />
                            </span>
                            <span data-bind="visible: editable">
                                <input type="button" data-bind="click: updatePost" value="Save" />
                            </span>
                        </td>
                        <td><input type="button" data-bind="click: removePost" value="Remove" /></td>
                    </tr>
                </tbody>
            </table>
>>>>>>> origin/master
>>>>>>> origin/master
>>>>>>> origin/master
        </div>
        <script type="text/javascript">
            $(function(){
                var con = $.hubConnection();
                var hub = con.createHubProxy('hitCounter');
                hub.on('newPost', function(p) {
                    var postString = '<table style="margin-bottom: 2em"> \
                        <tr> \
                            <td>Title:</td> \
                            <td> \
                                ' + p.Title + ' \
                            </td> \
                        </tr> \
                        <tr> \
                            <td>Author:</td> \
                            <td> \
                                ' + p.Author + ' \
                            </td> \
                        </tr> \
                        <tr> \
                            <td>Content:</td> \
                            <td> \
                                ' + p.Content + ' \
                            </td> \
                        </tr> \
                    </table>';
                    $('#publicPosts').prepend(postString);
                });
                con.start(function() {
                    hub.invoke('RecordHit');
                    hub.invoke('Send');
                });
            });
            var postVM = function() {
                var self = this;
                self.posts = ko.observableArray([]);
                self.publicPosts = ko.observableArray([]);

                var mapping = 
                {
                    create: function(_data) {
                        return new Data(_data.data);
                    }
                };

                var Data = function (data) {
                    var self = this;

                    ko.mapping.fromJS(data, {}, self);

                    self.editable = ko.observable(false);
                };
    
                self.addData = function (_data, _list) {
                    ko.mapping.fromJS(_data, mapping, _list);
                };

                var rawData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model));
                self.addData(rawData.PostList, self.posts);
                self.addData(rawData.PublicPostList, self.publicPosts);

                self.toggleEditable = function (post) {
                    post.editable(!post.editable());
                };

                self.removePost = function () {
                    var localThis = this;
                    self.postChanges("/Home/RemovePost/", this, function(){
                        self.posts.remove(localThis);
                    });
                };

                self.updatePost = function (data, event) {
                    var context = ko.contextFor(event.target);
                    var index = context.$index();
                    var titleSel = "#" + index + "titleEdit";
                    var contentSel = "#" + index + "contentEdit";
<<<<<<< HEAD
                    var publicSel = "#" + index + "publicEdit";
                    this.Title($(titleSel).val());
                    this.Content($(contentSel).val());
                    this.Public($(publicSel).prop("checked"));
=======
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> origin/master
                    var publicSel = "#" + index + "publicEdit";
                    this.Title($(titleSel).val());
                    this.Content($(contentSel).val());
                    this.Public($(publicSel).prop("checked"));
<<<<<<< HEAD
=======
=======
                    this.Author("@Model.UserObj.Username");
                    this.Title($(titleSel).val());
                    this.Content($(contentSel).val());
>>>>>>> origin/master
>>>>>>> origin/master
>>>>>>> origin/master
                    self.postChanges("/Home/UpdatePost/", this, function(){})
                    self.toggleEditable(this);
                };

                self.addPost = function (event) {

                    event.preventDefault();
                    var newPost = {
<<<<<<< HEAD
                        Title: ko.observable($("#titleInput").val()),
                        Author: '@Model.UserObj.Username',
=======
<<<<<<< HEAD
=======
<<<<<<< HEAD
=======
                        //Author: ko.observable($("#authorInput").val()),
                        Author: "@Model.UserObj.Username",
>>>>>>> origin/master
>>>>>>> origin/master
                        Title: ko.observable($("#titleInput").val()),
>>>>>>> origin/master
                        Content: ko.observable($("#contentInput").val()),
                        Public: ko.observable($("#publicInput").prop("checked"))
                    };
                    self.postChanges("/Home/AddPost/", newPost, function(data){
                        if(data != "false"){
                            var post = new Data(newPost);
                            post.Id = data;
<<<<<<< HEAD
                            self.posts.unshift(post);
=======
                            self.posts.push(post);
>>>>>>> origin/master
                            self.validPost = false;
                        }
                    });
                };

                self.postChanges = function (strLocation, postData, callback) {
                    var post = ko.mapping.toJS(postData);
                    $.ajax({
                        url: strLocation,
                        type: "POST",
                        dataType: "text",
                        data: postData,
                        success: callback,
                        error: function(textStatus) {
                            alert("Something went wrong, post failed.");
                            //alert(textStatus.responseText);
                        }
                    });
                };

                self.logOut = function () {
                    $.post("/Login/Logout");
                }
            };
            ko.applyBindings(postVM());

        </script>
    </body>
</html>