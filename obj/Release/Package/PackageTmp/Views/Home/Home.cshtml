@model SimplePosts.ViewModel.PostVM

@{
    Layout = null;
    var sessionVar = HttpContext.Current.Session["User"];
}

<!DOCTYPE html>

<html>
    <head>
        <meta name="viewport" content="width=device-width" />
        <title>AccountSummary</title>

        <script src="~/Scripts/jquery-2.2.3.js"></script>
        <script src="~/Scripts/jquery.validate.js"></script>
        <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
        <script src="~/Scripts/knockout-3.4.0.js"></script>
        <script src="~/Scripts/knockout.mapping-latest.js"></script>


    </head>
    <body>
        <div>
            Welcome, @Session["Username"].  Not @Session["Username"]? <a href="/Login/Logout/">Logout</a>
            <form>
                Author: <input type="text" id="authorInput" /><br />
                Title: <input type="text" id="titleInput" /><br />
                Content: <textarea id="contentInput"></textarea><br />
                <input type="submit" data-bind="click: addPost" name="Submit" value="Save" />
            </form>
        </div>
        
        <div>
            <table data-bind="foreach: posts">

                <tbody data-bind="attr: { id: $index }">
                    <tr>
                        <td>Title:</td>
                        <td>
                            <span data-bind="text: Title, visible: !editable()"></span>
                            <span data-bind="visible: editable"><input type="text" data-bind="value: Title, attr: { 'id': $index() + 'titleEdit' }" /></span>
                        </td>
                    </tr>
                    <tr>
                        <td>Author:</td>
                        <td>
                            <span data-bind="text: Author, visible: !editable()"></span>
                            <span data-bind="visible: editable"><input type="text" data-bind="value: Author, attr: { 'id': $index() + 'authorEdit' }" /></span>
                        </td>
                    </tr>
                    <tr>
                        <td>Content:</td>
                        <td>
                            <span data-bind="text: Content, visible: !editable()"></span>
                            <span data-bind="visible: editable"><input type="text" data-bind="value: Content, attr: { 'id': $index() + 'contentEdit' }" /></span>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <span data-bind="visible: !editable()">
                                <input type="button" data-bind="click: toggleEditable, visible: !editable()" value="Edit" />
                            </span>
                            <span data-bind="visible: editable">
                                <input type="button" data-bind="click: updatePost, visible: editable" value="Save" />
                            </span>
                        </td>
                        <td><input type="button" data-bind="click: removePost" value="Remove" /></td>
                    </tr>
                </tbody>
            </table>
        </div>
        <script type="text/javascript">

            var postVM = function() {
                var self = this;

                self.temp = ko.observableArray([]);
                self.posts = ko.observableArray([]);

                var mapping = 
                {
                    create: function(_data) {
                        return new Data(_data.data);
                    }
                };

                var Data = function (data) {
                    var self = this;

                    ko.mapping.fromJS(data, {}, self);

                    self.editable = ko.observable(false);
                };
    
                self.addData = function (_data) {
                    ko.mapping.fromJS(_data, mapping, self.posts);
                };

                var rawData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model));
                self.addData(rawData.PostList);

                self.toggleEditable = function (post) {
                    post.editable(!post.editable());
                };

                self.removePost = function () {
                    self.posts.remove(this);
                    self.postChanges("/Home/RemovePost/", this);
                };

                self.updatePost = function (data, event) {
                    var context = ko.contextFor(event.target);
                    var index = context.$index();
                    var authorSel = "#" + index + "authorEdit";
                    var titleSel = "#" + index + "titleEdit";
                    var contentSel = "#" + index + "contentEdit";
                    this.Author($(authorSel).val());
                    this.Title($(titleSel).val());
                    this.Content($(contentSel).val());
                    self.postChanges("/Home/UpdatePost/", this)
                    self.toggleEditable(this);
                };

                self.addPost = function () {
                    var newPost = {
                        Author: ko.observable($("#authorInput").val()),
                        Title: ko.observable($("#titleInput").val()),
                        Content: ko.observable($("#contentInput").val())
                    };
                    //if(self.posts() == null){
                    //    self.posts = ko.observableArray([]);
                    //}
                    self.posts.push(new Data(newPost));
                    self.postChanges("/Home/AddPost/", newPost);
                };

                self.postChanges = function (strLocation, data) {
                    var post = ko.mapping.toJS(data);
                    $.post(strLocation, post);
                };

                self.logOut = function () {
                    $.post("/Login/Logout");
                }
            };
            ko.applyBindings(postVM());
        </script>
    </body>
</html>